FILE_CHARSET='utf-8'
DEFAULT_CHARSET='utf-8'
"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 1.10.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
import sys

# CELERY STUFF
#import djcelery
#djcelery.setup_loader()

CELERY_BROKER_URL = 'amqp://localhost//'   # RabbitMQ, 如果是redis, 则为: 'redis://localhost:6379'
#CELERY_BROKER_URL = 'django://'
#CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DataBaseScheduler'    # 定时任务
#CELERY_RESULT_BACKEND = 'djcelery.backends.database:DatabaseBackend'
#CELERY_RESULT_BACKEND =  'amqp://localhost//'  # 'redis://localhost:6379'   # 这儿是REDIS???
#CELERY_RESULT_BACKEND = 'db+sqlite:///results.sqlite'
CELERY_RESULT_BACKEND = 'amqp://localhost//'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Asia/Shanghai'

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '_me%aqltuvhpm-$1#ec1m7plbz+3r@p%y_o6gc(9rpaa3j_&8q'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
#    'polls.apps.PollsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'guardian',
    'polls',
    'core',
    'utils',
    'report',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'core.context_processors.version',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'mysite2',
        'USER': 'root',
        'PASSWORD': 'gPekin1',
        'HOST': '',
        'PORT': '3306',
    }
}


#print( BASE_DIR +'/log/debug.log' )
debuglogfile = BASE_DIR + '/log/debug.log'
#print("debuglogfile:"+debuglogfile)
infologfile = BASE_DIR + '/log/info.log'
#print("infologfile:"+infologfile)
alllogfile = BASE_DIR + '/log/all.log'
#print("alllogfile:"+alllogfile)
consolelogfile = BASE_DIR + '/log/console.log'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
       'standard': {
            'format': '%(asctime)s [%(threadName)s:%(thread)d] [%(name)s:%(lineno)d] [%(module)s:%(funcName)s] [%(levelname)s]- %(message)s'}  #日志格式 
    },
    'handlers': {
        'default': {
            'level':'DEBUG',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': alllogfile,                   #日志输出文件
            'maxBytes': 1024*1024*5,                  #文件大小 
            'backupCount': 5,                         #备份份数
            'formatter':'standard',                   #使用哪种formatters日志格式
        },
        'console': {
            'level': 'WARNING',
            'class': 'logging.FileHandler',
            'filename': consolelogfile,
            'formatter':'standard',                   #使用哪种formatters日志格式
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': debuglogfile,
            'formatter':'standard',                   #使用哪种formatters日志格式
        },
        'info': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': infologfile,
            'formatter':'standard',                   #使用哪种formatters日志格式
        },
    },
    'loggers':{
        'django': {
            'handlers': ['file','console'],
            'level': 'INFO',
            'propagate': True,
        },
        'adamslogger':{
            'handlers': ['info'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',   # this is default
    'guardian.backends.ObjectPermissionBackend',
)

ANONYMOUS_USER_ID=-1

# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'zh-hans'#'en-us' #'zh-cn'

TIME_ZONE =  'Asia/Shanghai' #'UTC'   # 'UTC+8' invalid

USE_I18N = True

USE_L10N = True

USE_TZ = True

# -Adams start-
abspath = lambda *p: os.path.abspath(os.path.join(*p))

PROJECT_ROOT = abspath(os.path.dirname(__file__))
GUARDIAN_MODULE_PATH = abspath(PROJECT_ROOT, '..')
sys.path.insert(0, GUARDIAN_MODULE_PATH)

LOGIN_REDIRECT_URL = '/polls/'

PASSWORD_HASHERS = (
    'django.contrib.auth.hashers.MD5PasswordHasher',
    'django.contrib.auth.hashers.SHA1PasswordHasher',
)

AUTH_USER_MODEL = 'core.CustomUser'

GUARDIAN_GET_INIT_ANONYMOUS_USER = 'core.models.get_custom_anon_user'

# -adams-end


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'
